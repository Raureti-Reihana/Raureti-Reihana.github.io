**What is a Git workflow?**  
  
a Git workflow is reccomended way of using Git. The exercise gave me a good understanding of how to comment on commits to help anyone that  
is trying to understand what has been changed, added or deleted. unless your workplace has a different way of working you should definately  
adopt this workflow.  
  
**What did you notice about your learning? What did you do when you were confused or blocked?**  
  
i had a few of these moments espesialy when doing the Version Control with Git Course. i felt it was not clear enough in some exercises  
and ended up wasting time. The positive is that it forced met to do more of my own reasearch on google to assist.  
  
**Is there anything you'd do differently if you were to repeat the learning exploration?**  
  
no.  
  
**How would you describe stage and commit to your non-tech-savvy friend?**  
  
i think of the stage and commit process as three stages.  

1. when you make a change in your git directory on your local network, the command line recognises that you have a change that has not yet  
been tracked by Git. let's call this stage "untracked changes".  
  
2. after the "untracked changes" stage we will now use the command 'git add', this will move any pending changes to the next stage which  
we will call "Staging Index". The "Staging Index" helps to merge other versions of the project, for example if you and another are working  
on the same project but different versions.   

3. after our changes have moved to the staging index we are now ready to commit these changes. We will now use the command 'git commit'.  
Git will now track the change and add it to the log of other commits we have already made which we can look at with 'git log'.  
  
basicaly  
  
you make changes > send changes to stage > commit change to be recoreded by git  
  
What is main?  
  
main is the main or master version of a project.  
  
**Why create a branch?**  
  
you would create a branch so you can work on another version of the main, sort of like a duplicate. this allows you to be able to make  
commits without worrying about affecting the main. it also gives you or others to review your code before merging it back to the main.  
  
  
**Do the concepts introduced feel intuitive or difficult to understand?**  
  
yes they do. I feel i am getting a fair amount of understanding of these concepts for the amount of time i've put in so far.  
the practicle side really helps me retain more information.  
